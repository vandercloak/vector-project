export type NoTryResult<T, E = Error> = [E | undefined, T | undefined];
export declare function noTry<T, E = Error>(fn: () => T, handleErr?: (error: E) => void): NoTryResult<T, E>;
export declare function noTryAsync<T, E = Error>(fn: () => Promise<T>, handleErr?: (error: E) => void): Promise<NoTryResult<T, E>>;
export declare const useTry: typeof noTry;
export declare const useTryAsync: typeof noTryAsync;
