(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["no-try"] = {}));
})(this, (function (exports) { 'use strict';

  function noop() {
      return undefined;
  }
  function noTry(fn, handleErr = noop) {
      const result = [undefined, undefined];
      try {
          result[1] = fn();
      }
      catch (err) {
          result[0] = err;
          handleErr(err);
      }
      return result;
  }
  async function noTryAsync(fn, handleErr = noop) {
      const result = [undefined, undefined];
      try {
          result[1] = await fn();
      }
      catch (err) {
          result[0] = err;
          handleErr(err);
      }
      return result;
  }
  const useTry = noTry;
  const useTryAsync = noTryAsync;

  exports.noTry = noTry;
  exports.noTryAsync = noTryAsync;
  exports.useTry = useTry;
  exports.useTryAsync = useTryAsync;

}));
//# sourceMappingURL=index.js.map
